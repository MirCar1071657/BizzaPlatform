python -m venv django-env 		// (la prima volta)
django-env\Scripts\activate (per attivare l'ambiente virtuale)
pip install Flask		// (la prima volta)
Creata la directory bizza (mkdir bizza, cd bizza), creo app.py
creo .flaskenv e inserisco:
	FLASK_APP=app.py
	FLASK_ENV=development
	FLASK_DEBUG=true
pip install python-dotenv
flask run
deactivate

Git e GitHub
git config --global user.name "MirCar1071657"
git config --global user.email "mirco1972@libero.it"
Posso controllare con git config --list

Nella directory che voglio tracciare dare:
git init

Modifico e/o creo file poi:
git add --all
(Posso verificare sempre con git status)

Alla fine delle modifiche do:
git commit -m "<nome commit>" ad esempio git commit -m "First commit Bizza Platform"

Lo storico di git si vede con:
git log

Git + GitHub
Dopo aver creato un account in GitHub, creare un repository su GitHub.
Carico il repository locale in GitHub con:
git remote add origin https://github.com/MirCar1071657/BizzaPlatform.git
git branch -M main
git push -u origin main

In GitHub ora ho sotto MirCar1071657 un repository BizzaPlatform ed un commit chiamato "First commit Bizza Platform"

(provo a completare cap1 del libro "Fullstack Flask and React": in pratica manca una parte del file Note.txt
	git add --all
	git commit -m "Capitolo 1"
	git push origin
)


Per creare un branch e poi verificarlo usare:
git branch <nome-branch>
git branch

Per eliminare una commit usare:
git reset --hard HEAD~1 (toglie la commit pi√π recente) MA MODIFICA I FILES DI ORIGINE!!!
poi per github dare:
git push origin main --force